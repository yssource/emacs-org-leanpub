# DRAFT Setting up

## Signing up for Leanpub

## Emacs and org-mode configuration

## Creating the book locally

I> All the steps that follow show the actual commands and operations I performed while setting up the book you are reading! You can find the sources for the current version of this book at <https://github.com/zzamboni/emacs-org-leanpub>.

The first step is to choose a short name or *slug* for your book. This is the URL identifier for your book in Leanpub, and it should also be the name of your git repository (this is not mandatory, but makes the automation easier). This book's slug is `emacs-org-leanpub`, so its Leanpub URL will be leanpub.com/emacs-org-leanpub.

### Creating a git repository for your book

Once we have a slug, we create a new Git repository for the new book. Leanpub supports both GitHub and Bickbucket repositories. In these descriptions I use GitHub, but similar steps apply if you are using Bitbucket.

T> I use the command-line utility [hub](https://hub.github.com/) to interact with GitHub from the command line. You can of course do the corresponding operations through the GitHub web interface if you so prefer. If you use Bitbucket, you can use [git-spindle](https://seveas.github.io/git-spindle/bitbucket.html) to interact with it from the command line as well.

{format: "sh"}
```
cd ~/Personal/writing
mkdir -p emacs-org-leanpub
cd emacs-org-leanpub
git init .
```

{format: "console"}
```
$ cd ~/Personal/writing
$ mkdir -p emacs-org-leanpub
$ cd emacs-org-leanpub
$ git init .
Initialized empty Git repository in /Users/taazadi1/Dropbox/Personal/writing/emacs-org-leanpub/.git/
```

Next, we create a new GitHub repository and connect it to our local repository:

{format: "sh"}
```
cd ~/Personal/writing/emacs-org-leanpub
hub create
git remote -v
```

{format: "console"}
```
$ cd ~/Personal/writing/emacs-org-leanpub
$ hub create
Updating origin
https://github.com/zzamboni/emacs-org-leanpub
$ git remote -v
origin	https://github.com/zzamboni/emacs-org-leanpub.git (fetch)
origin	https://github.com/zzamboni/emacs-org-leanpub.git (push)
```

### Creating the book file

Now you can start writing your text inside the new repository. I usually write the main text in a file called `book.org` in the root directory of the repository.

To get you started, a basic skeleton for a book is the following:

{format: "org"}
```
#+startup: indent
#+tags: noexport sample frontmatter mainmatter backmatter
#+options: toc:nil tags:nil

#+title: Your book title
#+author: Your name

* Introduction

Some text

* Chapter 1

Some more text
```

T> For a more complex example, you can find the sources for the current version of this book at <https://github.com/zzamboni/emacs-org-leanpub>.

Once you have some text, you can simply commit and push the changes to your remote repository:

{format: "console"}
```
$ cd ~/Personal/writing/emacs-org-leanpub
$ git add book.org
$ git ci -m "Initial commit of the book"
[master (root-commit) 3e166f4] Initial commit of the book
 1 file changed, 230 insertions(+)
 create mode 100644 book.org
$ git push -u origin master
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 3.72 KiB | 3.72 MiB/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://github.com/zzamboni/emacs-org-leanpub.git
 * [new branch]      master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.
```

{id: "your-first-book-export"}
### Your first book export

Now that you have the initial skeleton for your book, it's time to export it from Org to Leanpub's Markua format, from which Leanpub can produce a rendered version of your book for you to preview.

For this, we use the `ox-leanpub` module which you installed on Emacs. Pressing `C-c C-e` will show you Org-mode's Export screen. Among other options, you should see the following:

```
[M] Export to Leanpub Markua
    [M] To temporary buffer       [m] To file
    [o] To file and open
    [b] Multifile: Whole book     [s] Multifile: Subset
    [c] Multifile: Current chapter
```

Press `M b` to export the whole book in "Multifile format", which exports your book from the Org file and creates the [structure and files](https://leanpub.com/manual/read#writing-your-book-in-github-mode) needed by Leanpub to render the book. For example, for this book, the following files, directories and symlinks will be created (the original source file is `book.org`, everything else is created from it):

```
.
├── book.org
├── images -> manuscript/resources/images
├── manuscript
│   ├── Book.txt
│   ├── automation.markua
│   ├── images -> resources/images
│   ├── introduction.markua
│   ├── resources
│   │   └── images
│   │       ├── github-add-collaborator.png
│   │       ├── github-add-webhook.png
│   │       ├── high-level-workflow.png
│   │       ├── leanpub-create-book.png
│   │       ├── leanpub-getting-started-screen.png
│   │       └── leanpub-preview-email.png
│   ├── setting-up.markua
│   ├── the-workflow.markua
│   └── tips-and-tricks.markua
└── typescript
```

In short, this is what the export operation does:

* Creates a `manuscript` folder if needed, under which all other files are stored.
  * A `resources/images` directory is created inside `manuscript`, as required by the Leanpub Markua exporter.
  * Symlinks to the `images` directory are created both from the top-level directory, and from the `manuscript` directory, to allow referencing the same image files both from the Org file and from the exported Markua files.
* Exports one `.markua` file for each top-level header (chapter) in your book.
* Creates the `Book.txt` file with the filenames corresponding to the chapters of your book.
  * Depending on the exporter settings, the `Subset.txt` and `Sample.txt` files may also be created.

## Creating the book on Leanpub

Now that you have the basics of a book, you need to create a new book in Leanpub and link it to your Git repository. Assuming you are signed into your Leanpub account, you can do this by visiting <https://leanpub.com/create/book>, and following the prompts. In particular, note the following:

W> Leanpub's pricing plans changed in October 2019, making it necessary to have a "Standard" or "Pro" plan to be able to write your book using Git integrations.

* The "On your computer" option under "Where do you want to write" is only available in the paid Leanpub plans. Choose the corresponding git option, and enter the path to your repository as created above.
* I suggest you use the same name for the "Book URL" and for your Git repository. This is not mandatory, but it makes some of the automation easier (particularly for integration with CI/CD systems).
* I personally like to enable "Send output to Dropbox" to always have the latest rendered version of my books synchronized to my machine, but feel free to leave it disabled if you prefer.

  ![](images/leanpub-create-book.png)

After you create the book, Leanpub shows you a "Getting Started" page which describes some additional steps you need to complete to finish setting up your book and its integration with your git repository.

![](images/leanpub-getting-started-screen.png)

Make sure you follow these instructions, which include:

* Adding Leanpub as a collaborator to your GitHub or BitBucket repository. This makes it possible for Leanpub to read the files from your repository to render the book. ![](images/github-add-collaborator.png)
* Adding a webhook to your repository to trigger an automatic preview of your book whenever you push new changes to your repository. This is an optional step, but one which makes it much easier to generate the book whenever you make changes. Not this this "hardcodes" the type of book generation (Preview or Publish) which happens when you push changes. For a more complex setup, see [CI/CD for previewing and publishing](#ci-cd-for-previewing-and-publishing). ![](images/github-add-webhook.png)

  W> Leanpub's "Edit Webhook" page includes your real Leanpub API key, which you should keep secret, as it enables access to all operations on your book.

## Your first book preview

Once you have created your book on Leanpub and connected it to your Git repository, you are ready to produce your first preview. Follow the same steps shown in [Your first book export](#your-first-book-export) to generate the Markua files from your Org file, and then commit and push the changes to your repository.

{format: "console"}
```
$ cd ~/Personal/writing/emacs-org-leanpub
$ git add .
$ git ci -m 'Commit for first book Preview'
[master edc3c97] Commit for first book Preview
 7 files changed, 80 insertions(+), 9 deletions(-)
$ git push
Enumerating objects: 19, done.
Counting objects: 100% (19/19), done.
Writing objects: 100% (12/12), 1.32 MiB | 1.28 MiB/s, done.
To https://github.com/zzamboni/emacs-org-leanpub.git
   00a67a1..edc3c97  master -> master
```

If you configured the webhook in the previous steps, the `git push` will automatically trigger a book preview. If you did not, you can visit the Preview page of your book at `https://leanpub.com/<your-book-id>/preview` and clicking on the "Create Preview" button.  In any case, after a few minutes you will get an email from Leanpub telling you about the preview creation.

![](images/leanpub-preview-email.png)

If you enabled Dropbox integration, the generated preview files of your book will be automatically added to your Dropbox folder, and you can also download them from the Preview page of your book.
