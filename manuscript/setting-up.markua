# DRAFT Setting up

## Signing up for Leanpub

## Emacs and org-mode configuration

## Creating the book locally

I> All the steps that follow show the actual commands and operations I performed while setting up the book you are reading! You can find the sources for the current version of this book at <https://github.com/zzamboni/emacs-org-leanpub>.

The first step is to choose a short name or *slug* for your book. This is the URL identifier for your book in Leanpub, and it should also be the name of your git repository (this is not mandatory, but makes the automation easier). This book's slug is `emacs-org-leanpub`, so its Leanpub URL will be leanpub.com/emacs-org-leanpub.

### Creating a git repository for your book

Once we have a slug, we create a new Git repository for the new book. Leanpub supports both GitHub and Bickbucket repositories. In these descriptions I use GitHub, but similar steps apply if you are using Bitbucket.

T> I use the command-line utility [hub](https://hub.github.com/) to interact with GitHub from the command line. You can of course do the corresponding operations through the GitHub web interface if you so prefer. If you use Bitbucket, you can use [git-spindle](https://seveas.github.io/git-spindle/bitbucket.html) to interact with it from the command line as well.

{format: "sh"}
```
cd ~/Personal/writing
mkdir -p emacs-org-leanpub
cd emacs-org-leanpub
git init .
```

{format: "console"}
```
$ cd ~/Personal/writing
$ mkdir -p emacs-org-leanpub
$ cd emacs-org-leanpub
$ git init .
Initialized empty Git repository in /Users/taazadi1/Dropbox/Personal/writing/emacs-org-leanpub/.git/
```

Next, we create a new GitHub repository and connect it to our local repository:

{format: "sh"}
```
cd ~/Personal/writing/emacs-org-leanpub
hub create
git remote -v
```

{format: "console"}
```
$ cd ~/Personal/writing/emacs-org-leanpub
$ hub create
Updating origin
https://github.com/zzamboni/emacs-org-leanpub
$ git remote -v
origin	https://github.com/zzamboni/emacs-org-leanpub.git (fetch)
origin	https://github.com/zzamboni/emacs-org-leanpub.git (push)
```

### Creating the book file

Now you can start writing your text inside the new repository. I usually write the main text in a file called `book.org` in the root directory of the repository.

To get you started, a basic skeleton for a book is the following:

{format: "org"}
```
#+startup: indent
#+tags: noexport sample frontmatter mainmatter backmatter
#+options: toc:nil tags:nil

#+title: Your book title
#+author: Your name

* Introduction

Some text

* Chapter 1

Some more text
```

T> For a more complex example, you can find the sources for the current version of this book at <https://github.com/zzamboni/emacs-org-leanpub>.

Once you have some text, you can simply commit and push the changes to your remote repository:

{format: "sh"}
```
cd ~/Personal/writing/emacs-org-leanpub
git add book.org
git ci -m "Initial commit of the book"
git push -u origin master
```

{format: "console"}
```
$ cd ~/Personal/writing/emacs-org-leanpub
$ git add book.org
$ git ci -m "Initial commit of the book"
[master (root-commit) 3e166f4] Initial commit of the book
 1 file changed, 230 insertions(+)
 create mode 100644 book.org
$ git push -u origin master
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 3.72 KiB | 3.72 MiB/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://github.com/zzamboni/emacs-org-leanpub.git
 * [new branch]      master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.
```

### Your first book export!

Now that you have the initial skeleton for your book, it's time to export it from Org to Leanpub's Markua format, from which Leanpub can produce a rendered version of your book for you to preview.

For this, we use the `ox-leanpub` module which you installed on Emacs. Pressing `C-c C-e` will show you Org-mode's Export screen. Among other options, you should see the following:

```
[M] Export to Leanpub Markua
    [M] To temporary buffer       [m] To file
    [o] To file and open
    [b] Multifile: Whole book     [s] Multifile: Subset
    [c] Multifile: Current chapter
```

Press `M b` to export the whole book in "Multifile format", which exports your book from the Org file and creates the [structure and files](https://leanpub.com/manual/read#writing-your-book-in-github-mode) needed by Leanpub to render the book. In short, this is what it does:

* Creates a `manuscript/` folder if needed, under which all other files are stored.
  * A `resources/images` directory is created inside `manuscript/`, as required by the Leanpub Markua exporter.
  * Symlinks to the `images` directory are created both from the top-level directory, and from the `manuscript/` directory, to allow referencing the same image files both from the Org file and from the exported Markua files.
* Exports one `.markua` file for each top-level header (chapter) in your book.
* Creates the `Book.txt` file with the filenames corresponding to the chapters of your book.
  * Depending on the exporter settings, the `Subset.txt` and `Sample.txt` files may also be created.

For example, for this book, the following files, directories and symlinks will be created:

```
.
├── book.org
├── images -> manuscript/resources/images
└── manuscript
    ├── Book.txt
    ├── automation.markua
    ├── images -> resources/images
    ├── introduction.markua
    ├── resources
    │   └── images
    │       └── high-level-workflow.png
    ├── setting-up.markua
    ├── the-workflow.markua
    └── tips-and-tricks.markua
```

## Creating the book on Leanpub

Now that you have the basics of a book, you need to create a new book in Leanpub and link it to your Git repository for generation. Assuming you are signed into your Leanpub account, you can do this by visiting <https://leanpub.com/create/book>, where you will see a screen like the following:
